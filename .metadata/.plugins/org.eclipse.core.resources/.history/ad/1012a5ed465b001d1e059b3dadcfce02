/*
 * input_reading.c
 *
 *  Created on: Nov 2, 2022
 *      Author: Minh Duc Quach
 */

#include "input_reading.h"
#include "global.h"

#define NO_OF_BUTTONS 				       3
#define BUTTON_IS_PRESSED                  GPIO_PIN_RESET
#define BUTTON_IS_RELEASED                 GPIO_PIN_SET

static GPIO_PinState buttonBuffer[NO_OF_BUTTONS] = {BUTTON_IS_RELEASED};

static GPIO_PinState debounceButtonBuffer1[NO_OF_BUTTONS];
static GPIO_PinState debounceButtonBuffer2[NO_OF_BUTTONS];
static GPIO_PinState debounceButtonBuffer3[NO_OF_BUTTONS];

GPIO_TypeDef* port[NO_OF_BUTTONS] = {Button1_GPIO_Port, Button2_GPIO_Port, Button3_GPIO_Port};
uint16_t pin[NO_OF_BUTTONS] = {Button1_Pin, Button2_Pin, Button3_Pin};

void button_reading(){
	for(char i = 0; i < NO_OF_BUTTONS; i ++){
		debounceButtonBuffer3[i] = debounceButtonBuffer2[i];
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
		debounceButtonBuffer1[i] = HAL_GPIO_ReadPin(port[i], pin[i]);
		if(debounceButtonBuffer3[i] == debounceButtonBuffer2[i] && debounceButtonBuffer2[i] == debounceButtonBuffer1[i]){
			if (buttonBuffer[i] != debounceButtonBuffer1[i]){
				buttonBuffer[i] = debounceButtonBuffer1[i];
			}
		}
	}
}

int isButtonPressed(int index){
	if(index >= NO_OF_BUTTONS) return 0;
	return (buttonBuffer[index] == BUTTON_IS_PRESSED ? 1 : 0);
}

